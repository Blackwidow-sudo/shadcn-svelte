{
	"name": "input",
	"dependencies": [],
	"registryDependencies": [],
	"files": [
		{
			"name": "index.ts",
			"content": "import Root from \"./input.svelte\";\n\nexport type FormInputEvent<T extends Event = Event> = T & {\n\tcurrentTarget: EventTarget & HTMLInputElement;\n};\nexport type InputEvents = {\n\tblur: FormInputEvent<FocusEvent>;\n\tchange: FormInputEvent<Event>;\n\tclick: FormInputEvent<MouseEvent>;\n\tfocus: FormInputEvent<FocusEvent>;\n\tfocusin: FormInputEvent<FocusEvent>;\n\tfocusout: FormInputEvent<FocusEvent>;\n\tkeydown: FormInputEvent<KeyboardEvent>;\n\tkeypress: FormInputEvent<KeyboardEvent>;\n\tkeyup: FormInputEvent<KeyboardEvent>;\n\tmouseover: FormInputEvent<MouseEvent>;\n\tmouseenter: FormInputEvent<MouseEvent>;\n\tmouseleave: FormInputEvent<MouseEvent>;\n\tmousemove: FormInputEvent<MouseEvent>;\n\tpaste: FormInputEvent<ClipboardEvent>;\n\tinput: FormInputEvent<InputEvent>;\n\twheel: FormInputEvent<WheelEvent>;\n};\n\nexport {\n\tRoot,\n\t//\n\tRoot as Input,\n};\n"
		},
		{
			"name": "input.svelte",
			"content": "<script lang=\"ts\">\n\timport { type PrimitiveInputAttributes, cn } from \"$lib/utils.js\";\n\n\tlet {\n\t\tvalue = $bindable(),\n\t\tref = $bindable(null),\n\t\tclass: className,\n\t\t...restProps\n\t}: PrimitiveInputAttributes = $props();\n</script>\n\n<input\n\tbind:this={ref}\n\tclass={cn(\n\t\t\"border-input placeholder:text-muted-foreground focus-visible:ring-ring flex h-9 w-full rounded-md border bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-1 disabled:cursor-not-allowed disabled:opacity-50\",\n\t\tclassName\n\t)}\n\tbind:value\n\t{...restProps}\n/>\n"
		}
	],
	"type": "components:ui"
}
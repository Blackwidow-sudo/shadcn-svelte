{
	"name": "alert",
	"dependencies": [],
	"registryDependencies": [],
	"files": [
		{
			"name": "alert-description.svelte",
			"content": "<script>import { cn } from \"$lib/utils.js\";\nlet {\n  ref = $bindable(null),\n  class: className,\n  children,\n  ...restProps\n} = $props();\n</script>\n\n<div bind:this={ref} class={cn(\"text-sm [&_p]:leading-relaxed\", className)} {...restProps}>\n\t{@render children?.()}\n</div>\n"
		},
		{
			"name": "alert-title.svelte",
			"content": "<script>import { cn } from \"$lib/utils.js\";\nlet {\n  ref = $bindable(null),\n  class: className,\n  level = 3,\n  children,\n  ...restProps\n} = $props();\n</script>\n\n<div\n\trole=\"heading\"\n\taria-level={level}\n\tbind:this={ref}\n\tclass={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n\t{...restProps}\n>\n\t{@render children?.()}\n</div>\n"
		},
		{
			"name": "alert.svelte",
			"content": "<script>import { alertVariants } from \"./index.js\";\nimport { cn } from \"$lib/utils.js\";\nlet className = undefined;\nexport let variant = \"default\";\nexport { className as class };\n</script>\n\n<div class={cn(alertVariants({ variant }), className)} {...$$restProps} role=\"alert\">\n\t<slot />\n</div>\n"
		},
		{
			"name": "index.js",
			"content": "import { tv } from \"tailwind-variants\";\nimport Root from \"./alert.svelte\";\nimport Description from \"./alert-description.svelte\";\nimport Title from \"./alert-title.svelte\";\nexport const alertVariants = tv({\n    base: \"relative w-full rounded-lg border p-4 [&:has(svg)]:pl-11 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n    variants: {\n        variant: {\n            default: \"bg-background text-foreground\",\n            destructive: \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        },\n    },\n    defaultVariants: {\n        variant: \"default\",\n    },\n});\nexport { Root, Description, Title, \n//\nRoot as Alert, Description as AlertDescription, Title as AlertTitle, };\n"
		}
	],
	"type": "components:ui"
}
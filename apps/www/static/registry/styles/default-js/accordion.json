{
	"name": "accordion",
	"dependencies": [
		"bits-ui",
		"lucide-svelte"
	],
	"registryDependencies": [],
	"files": [
		{
			"name": "accordion-content.svelte",
			"content": "<script>import { Accordion as AccordionPrimitive } from \"bits-ui\";\nimport { cn } from \"$lib/utils.js\";\nlet {\n  ref = $bindable(null),\n  class: className,\n  children,\n  ...restProps\n} = $props();\n</script>\n\n<AccordionPrimitive.Content\n\tbind:ref\n\tclass={cn(\"overflow-hidden text-sm transition-all\", className)}\n\t{...restProps}\n>\n\t<div class=\"pb-4 pt-0\">\n\t\t{@render children?.()}\n\t</div>\n</AccordionPrimitive.Content>\n"
		},
		{
			"name": "accordion-item.svelte",
			"content": "<script>import { Accordion as AccordionPrimitive } from \"bits-ui\";\nimport { cn } from \"$lib/utils.js\";\nlet {\n  ref = $bindable(null),\n  class: className,\n  ...restProps\n} = $props();\n</script>\n\n<AccordionPrimitive.Item bind:ref class={cn(\"border-b\", className)} {...restProps} />\n"
		},
		{
			"name": "accordion-trigger.svelte",
			"content": "<script>import { Accordion as AccordionPrimitive } from \"bits-ui\";\nimport ChevronDown from \"lucide-svelte/icons/chevron-down\";\nimport { cn } from \"$lib/utils.js\";\nlet {\n  ref = $bindable(null),\n  class: className,\n  level = 3,\n  children,\n  ...restProps\n} = $props();\n</script>\n\n<AccordionPrimitive.Header {level} class=\"flex\">\n\t<AccordionPrimitive.Trigger\n\t\tbind:ref\n\t\tclass={cn(\n\t\t\t\"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n\t\t\tclassName\n\t\t)}\n\t\t{...restProps}\n\t>\n\t\t{@render children?.()}\n\t\t<ChevronDown class=\"size-4 transition-transform duration-200\" />\n\t</AccordionPrimitive.Trigger>\n</AccordionPrimitive.Header>\n"
		},
		{
			"name": "index.js",
			"content": "import { Accordion as AccordionPrimitive } from \"bits-ui\";\nimport Content from \"./accordion-content.svelte\";\nimport Item from \"./accordion-item.svelte\";\nimport Trigger from \"./accordion-trigger.svelte\";\nconst Root = AccordionPrimitive.Root;\nexport { Root, Content, Item, Trigger, \n//\nRoot as Accordion, Content as AccordionContent, Item as AccordionItem, Trigger as AccordionTrigger, };\n"
		}
	],
	"type": "components:ui"
}
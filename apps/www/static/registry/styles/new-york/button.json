{
	"name": "button",
	"dependencies": [],
	"registryDependencies": [],
	"files": [
		{
			"name": "button.svelte",
			"content": "<script lang=\"ts\">\n\timport { type Props, buttonVariants } from \"./index.js\";\n\timport { cn } from \"$lib/utils.js\";\n\n\tlet {\n\t\tclass: className,\n\t\tvariant = \"default\",\n\t\tsize = \"default\",\n\t\tref = $bindable(null),\n\t\tchildren,\n\t\t...restProps\n\t}: Props = $props();\n</script>\n\n<button\n\tbind:this={ref}\n\tclass={cn(buttonVariants({ variant, size, className }))}\n\ttype=\"button\"\n\t{...restProps}\n>\n\t{@render children?.()}\n</button>\n"
		},
		{
			"name": "index.ts",
			"content": "import type { Button as ButtonPrimitive, WithElementRef } from \"bits-ui\";\nimport { type VariantProps, tv } from \"tailwind-variants\";\nimport type { HTMLButtonAttributes } from \"svelte/elements\";\nimport Root from \"./button.svelte\";\n\nconst buttonVariants = tv({\n\tbase: \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n\tvariants: {\n\t\tvariant: {\n\t\t\tdefault: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n\t\t\tdestructive:\n\t\t\t\t\"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n\t\t\toutline:\n\t\t\t\t\"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n\t\t\tsecondary: \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n\t\t\tghost: \"hover:bg-accent hover:text-accent-foreground\",\n\t\t\tlink: \"text-primary underline-offset-4 hover:underline\",\n\t\t},\n\t\tsize: {\n\t\t\tdefault: \"h-9 px-4 py-2\",\n\t\t\tsm: \"h-8 rounded-md px-3 text-xs\",\n\t\t\tlg: \"h-10 rounded-md px-8\",\n\t\t\ticon: \"size-9\",\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tvariant: \"default\",\n\t\tsize: \"default\",\n\t},\n});\n\ntype Variant = VariantProps<typeof buttonVariants>[\"variant\"];\ntype Size = VariantProps<typeof buttonVariants>[\"size\"];\n\ntype Props = WithElementRef<HTMLButtonAttributes, HTMLButtonElement> & {\n\tvariant?: Variant;\n\tsize?: Size;\n};\n\ntype Events = ButtonPrimitive.Events;\n\nexport {\n\tRoot,\n\ttype Props,\n\ttype Events,\n\t//\n\tRoot as Button,\n\ttype Props as ButtonProps,\n\ttype Events as ButtonEvents,\n\tbuttonVariants,\n};\n"
		}
	],
	"type": "components:ui"
}